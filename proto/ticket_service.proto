syntax = "proto3";
package proto;
option go_package = "/proto";

message TicketRequest {
    string from = 1;
    string to = 2;
    string first_name = 3;
    string last_name = 4;
    string email = 5;
    string date = 6;
}

message TicketResponse {
    string from = 1;
    string to = 2;
    string email = 3;
    double price = 4;
    string seat = 5;
    string date = 6;
    string first_name = 7;
    string last_name = 8;
}

message GetUserTicketRequest{
    string email = 1;
}

message GetSeatAllocationRequest{
    string email = 1;
}

message Bookingseat {
    string name = 1;
    string seatnumber = 2;
    string date = 3;
}

message CancelBookingTicketRequest {
    string email = 1;
    string seatnumber = 2;
    string date = 3;
}

message CancelBookingTicketResponse {
    string from = 1;
    string to = 2;
    string email = 3;
    double price = 4;
    string seat = 5;
}

message GetSeatAllocationResponse{
     repeated Bookingseat bookingseats = 1;
}

message GetAvailableSeatsRequest {
    string date = 1;
}

message GetAvailableSeatsResponse {
    repeated string seatNumbers = 1;
}
message UpdateUserSeatRequest {
    string email = 1;
    string date = 2;
    string seatnumber = 3;
}

message UpdateUserSeatResponse {
    string from = 1;
    string to = 2;
    string email = 3;
    double price = 4;
    string seat = 5;
}


service TicketBookingService {
rpc PurchaseTicket (TicketRequest) returns (TicketResponse);
rpc GetReceipt (GetUserTicketRequest) returns (TicketResponse);
rpc GetAllocationSeats (GetSeatAllocationRequest) returns (GetSeatAllocationResponse);
rpc CancelBookingTicket (CancelBookingTicketRequest) returns (CancelBookingTicketResponse);
rpc GetAvailableSeats (GetAvailableSeatsRequest) returns (GetAvailableSeatsResponse);
rpc UpdateUserSeat (UpdateUserSeatRequest) returns (UpdateUserSeatResponse);
}

